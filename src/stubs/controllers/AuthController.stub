<?php

namespace {{namespace}}Http\Controllers\Teamwork;

use App\User;
use App\Team;
use Illuminate\Http\Request;
use Mpociot\Teamwork\TeamInvite;
use Illuminate\Routing\Controller;
use Illuminate\Support\Facades\Mail;
use Mpociot\Teamwork\Facades\Teamwork;

class AuthController extends Controller
{

    /**
     * Accept the given invite
     * @param $token
     * @return \Illuminate\Http\RedirectResponse
     */
    public function acceptInvite($token)
    {
        $invite = Teamwork::getInviteFromAcceptToken($token);

        if (!$invite) {
            $message = "Your invitation is either expired or invalid, please ask the team owner to send you a new invitation.";
            return view('errors.error', compact('message'));
            //abort(404);
        }

        if (auth()->check()) {
            Teamwork::acceptInvite($invite);
            return redirect()->route('teams.index');
        } else {
            session(['invite_token' => $token]);
            $invitation = [
                'team_name' => Team::find($invite->team_id)->name,
                'sender_name' => User::find($invite->user_id)->name,
            ];
            return view('teamwork.invitation', compact('invitation'));
        }
    }

    public function declineInvite($token)
    {
        $invite = Teamwork::getInviteFromAcceptToken($token);

        if (!$invite) {
            $message = "Your invitation link is either expired or invalid, please ask the team owner to send you a new invitation.";
        } else {
            Teamwork::denyInvite($invite);
            $message = "The invitation has been declined";
        }
        return view('errors.error', compact('message'));
    }

}
